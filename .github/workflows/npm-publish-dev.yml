# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Node.js Package (dev)

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Name of the simulated tag" # DescripciÃ³n del tag
        required: true                           # Obligatorio
        default: "v0.0.175"                      # Valor por defecto

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      unanimo-changed: ${{ steps.check-unanimo.outputs.version-changed }}
      mercury-changed: ${{ steps.check-mercury.outputs.version-changed }}
      svg-sass-generator-changed: ${{ steps.check-svg-sass-generator.outputs.version-changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Get the latest Unanimo version
        id: get-latest-unanimo-version
        run: |
          PACKAGE_NAME=@genexus/unanimo
          LATEST_UNANIMO_VERSION=$(curl -s https://registry.npmjs.org/$PACKAGE_NAME | jq -r '.["dist-tags"].latest')
          echo "latest_unanimo_version=$LATEST_UNANIMO_VERSION" >> $GITHUB_ENV

      - name: Get the latest Mercury version
        id: get-latest-mercury-version
        run: |
          PACKAGE_NAME=@genexus/mercury
          LATEST_MERCURY_VERSION=$(curl -s https://registry.npmjs.org/$PACKAGE_NAME | jq -r '.["dist-tags"].latest')
          echo "latest_mercury_version=$LATEST_MERCURY_VERSION" >> $GITHUB_ENV

      - name: Get the latest SVG_Generator version
        id: get-latest-svg_generator-version
        run: |
          PACKAGE_NAME=@genexus/svg-sass-generator
          LATEST_SVG_GENERATOR_VERSION=$(curl -s https://registry.npmjs.org/$PACKAGE_NAME | jq -r '.["dist-tags"].latest')
          echo "latest_svg_generator_version=$LATEST_SVG_GENERATOR_VERSION" >> $GITHUB_ENV

      - name: Print last published versions
        run: |
          echo "The latest Unanimo version is ${{ env.latest_unanimo_version }}"
          echo "The latest Mercury version is ${{ env.latest_mercury_version }}"
          echo "The latest SVG Generator version is ${{ env.latest_svg_generator_version }}"
