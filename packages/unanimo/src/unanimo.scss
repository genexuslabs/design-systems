// Base styles from packages/common
@import "../../common/base";

@import "./base/common";

// Resets
@import "../../common/resets";

// Tokens
@import "./tokens/border-radius";
@import "./tokens/box-shadow";
@import "./tokens/colors";
@import "./tokens/font-size";
@import "./tokens/spacing";

// Base classes
@import "./base/typography"; // Must be placed before the button imports
@import "./base/button";
@import "./base/form-controls";
@import "./base/icons";

// Icons on components
@import "./icons/button";

// Components
@import "./components/card";
@import "./components/checkbox";
@import "./components/code";
@import "./components/combo-box";
@import "./components/dialog";
@import "./components/dropdown";
@import "./components/flexible-layout";
@import "./components/header";
@import "./components/markdown";
@import "./components/list-box";
@import "./components/query-viewer-pivot-table";
@import "./components/radio-group";
@import "./components/segmented-control";
@import "./components/slider";
@import "./components/switch";
@import "./components/tab";
@import "./components/tree-view";

@mixin unanimo(
  // Resets
  $resets: true,
  $box-sizing-reset: true,
  $button-reset: true,
  $input-reset: true,
  $other-reset: true,
  $typography-reset: true,

  // Theme
  $light-theme: true,
  $dark-theme: true,
  $prefers-color-scheme-light: false,
  $prefers-color-scheme-dark: false,

  // Tokens
  $tokens: true,
  $border-radius: true,
  $box-shadow: true,
  $colors: true,
  $font-size: true,
  $spacing: true,

  // Icons path
  $icons-path: "",

  // Font face
  $font-face: true,
  $font-face-path: "./assets/fonts/",

  $body: true,

  // Base
  $base-classes: true,
  $button-classes: true,
  $form-controls-classes: true,
  $hyperlink-classes: true,
  $icon-classes: true,
  $typography-classes: true,

  // Icons
  $icons-button: true,

  // Components
  $components: true,
  $action-group: true,
  $card: true,
  $checkbox: true,
  $code: true,
  $combo-box: true,
  $dialog-primary: true,
  $dialog-secondary: true,
  $dropdown-primary: true,
  $dropdown-secondary: true,
  $dropdown-conversational: true,
  $flexible-layout: true,
  $header: true,
  $markdown: true,
  $list-box-secondary: true,
  $query-viewer-pivot-table: true,
  $radio-group: true,
  $segmented-control: true,
  $slider-primary: true,
  $slider-secondary: true,
  $switch: true,
  $tab: true,
  $tree-view-primary: true,
  $tree-view-secondary: true
) {
  // font-face
  @if $font-face {
    @font-face {
      font-family: SourceSansPro; // 400
      src: url("#{$font-face-path}SourceSansPro_Regular.woff2");
      font-weight: 400;
      font-display: swap;
    }

    @font-face {
      font-family: SourceSansPro; // 600
      src: url("#{$font-face-path}SourceSansPro_SemiBold.woff2");
      font-weight: 600;
      font-display: swap;
    }

    @font-face {
      font-family: SourceSansPro; // 700
      src: url("#{$font-face-path}SourceSansPro_Bold.woff2");
      font-weight: 700;
      font-display: swap;
    }
  }

  // Light
  @if $colors and $light-theme and $tokens {
    :root.light {
      // Fixes issues in elements that force its color based on this property.
      // For example, the font color of the input with autocomplete (:-webkit-autofill)
      color-scheme: light;
      @include foundation-colors--light();
      @include semantic-colors--light();
    }
  }
  @if $colors and $tokens and $prefers-color-scheme-light {
    @media (prefers-color-scheme: light) {
      :root {
        // Fixes issues in elements that force its color based on this property.
        // For example, the font color of the input with autocomplete (:-webkit-autofill)
        color-scheme: light;
        @include foundation-colors--light();
        @include semantic-colors--light();
      }
    }
  }

  // Dark
  @if $colors and $dark-theme and $tokens {
    :root.dark {
      // Fixes issues in elements that force its color based on this property.
      // For example, the font color of the input with autocomplete (:-webkit-autofill)
      color-scheme: dark;
      @include foundation-colors--dark();
      @include semantic-colors--dark();
    }
  }
  @if $colors and $tokens and $prefers-color-scheme-dark {
    @media (prefers-color-scheme: dark) {
      :root {
        // Fixes issues in elements that force its color based on this property.
        // For example, the font color of the input with autocomplete (:-webkit-autofill)
        color-scheme: dark;
        @include foundation-colors--dark();
        @include semantic-colors--dark();
      }
    }
  }

  @if $tokens and
    ($border-radius or $box-shadow or $colors or $font-size or $spacing)
  {
    :root {
      // border-radius
      @if $border-radius {
        @include border-radius();
      }

      // box-shadow
      @if $box-shadow {
        @include box-shadow();
      }

      // General colors
      @if $colors {
        @include semantic-colors--general();
      }

      // font-size
      @if $font-size {
        @include font-size();
      }

      // spacing
      @if $spacing {
        @include spacing();
      }
    }
  }

  // Default background-color and color
  @if $body and $tokens and $colors {
    html {
      scrollbar-width: thin;
      scrollbar-color: var(--accents__secondary) transparent;

      &::-webkit-scrollbar {
        width: 8px;
        height: 8px;
        background-color: transparent;
      }

      &::-webkit-scrollbar-thumb {
        background-color: var(--accents__secondary);
      }
    }

    body {
      @include document-common-styles();
      background-color: var(--surface--alternative);
      color: var(--text__on-surface--positive);

      @if $font-face {
        font-family: SourceSansPro;
      }
    }
  }

  // - - - - - - - - - - - - - - - - - - - -
  //                 Resets
  // - - - - - - - - - - - - - - - - - - - -
  @if $resets {
    // box-sizing
    @if $box-sizing-reset {
      @include box-sizing();
    }

    // <button> and <a> reset
    @if $button-reset {
      @include button-reset();
    }

    @if $input-reset {
      @include input-reset();
    }

    // <hr> reset
    @if $other-reset {
      @include other-reset();
    }

    // Typography reset
    @if $typography-reset {
      @include typography-reset();
    }
  }

  // - - - - - - - - - - - - - - - - - - - -
  //              Base classes
  // - - - - - - - - - - - - - - - - - - - -
  @if $base-classes {
    // Button classes
    @if $button-classes {
      // Button primary
      @include button-primary();

      // Button secondary
      @include button-secondary();

      // Button tertiary
      @include button-tertiary();
    }

    // Form control classes
    @if $form-controls-classes {
      @include form-input();
      @include form-textarea();
      @include form-input__label();
      @include form-input__helper();
    }

    // Hyperlink
    @if $hyperlink-classes {
      @include hyperlink();
    }

    // Icon classes
    @if $icon-classes {
      @include icon-mask();
      @include icon-background();
    }

    // Typography classes
    @if $typography-classes {
      @include typography-classes();
    }
  }

  // - - - - - - - - - - - - - - - - - - - -
  //           Icons on components
  // - - - - - - - - - - - - - - - - - - - -
  // Icon classes
  @if $icons-button {
    // Button icon only
    @include button-icon-only();

    // Button icon and text
    @include button-icon-and-text();

    // Button icon after and text
    @include button-icon-after-and-text();
  }

  // - - - - - - - - - - - - - - - - - - - -
  //               Components
  // - - - - - - - - - - - - - - - - - - - -
  @if $components {
    // card
    @if $card {
      @include card();
    }

    // checkbox
    @if $checkbox {
      @include checkbox();
    }

    // code
    @if $code {
      @include code();
    }

    // combo-box
    @if $combo-box {
      @include combo-box();
    }

    // dialog-primary
    @if $dialog-primary {
      @include dialog-primary($icons-path: $icons-path);
    }

    // dialog-secondary
    @if $dialog-secondary {
      @include dialog-secondary($icons-path: $icons-path);
    }

    // dropdown primary
    @if $dropdown-primary {
      @include dropdown-primary();
    }

    // dropdown secondary
    @if $dropdown-secondary {
      @include dropdown-secondary();
    }

    // dropdown conversational
    @if $dropdown-conversational {
      @include dropdown-conversational();
    }

    // flexible layout
    @if $flexible-layout {
      @include flexible-layout();
    }

    // header
    @if $header {
      @include header();
    }

    // markdown
    @if $markdown {
      @include markdown();
    }

    // list-box-secondary
    @if $list-box-secondary {
      @include list-box-secondary();
    }

    // query-viewer-pivot-table
    @if $query-viewer-pivot-table {
      @include query-viewer-pivot-table($icons-path);
    }

    // radio-group
    @if $radio-group {
      @include radio-group();
    }

    // segmented-control
    @if $segmented-control {
      @include segmented-control();
    }

    // slider primary
    @if $slider-primary {
      @include slider-primary();
    }

    // slider secondary
    @if $slider-secondary {
      @include slider-secondary();
    }

    // switch
    @if $switch {
      @include switch();
    }

    // tab
    @if $tab {
      @include tab();
    }

    // tree-view-primary
    @if $tree-view-primary {
      @include tree-view-primary();
    }

    // tree-view-secondary
    @if $tree-view-secondary {
      @include tree-view-secondary();
    }

    // tree-view-secondary
    //  @if $tree-view-secondary {
    //   @include tree-view-secondary();
    // }
  }
}
