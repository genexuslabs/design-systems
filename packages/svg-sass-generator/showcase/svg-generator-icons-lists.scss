$icons-path: "../dist/";

/*multicolor lists*/
@import "./multicolor/objects-2";
@import "./multicolor/objects-1";

/*monochrome lists*/
@import "./monochrome/bpm-2";
@import "./monochrome/bpm-1";

$all-multicolor-lists: (
  objects-2: $icons-objects-2,
  objects-1: $icons-objects-1,
);

$all-monochrome-lists: (
  bpm-2: $icons-bpm-2,
  bpm-1: $icons-bpm-1,
);

@mixin multicolor-selectors($input-selector, $output-selector) {
  // :enabled
  #{$output-selector} {
    @extend #{$input-selector}--enabled-light;
  }
  html.dark #{$output-selector} {
    @extend #{$input-selector}--enabled-dark;
  }

  // :hover
  #{$output-selector}:hover,
  #{$output-selector}--hover.static {
    @extend #{$input-selector}--hover-light;
  }

  html.dark #{$output-selector}:hover,
  html.dark #{$output-selector}--hover.static {
    @extend #{$input-selector}--hover-dark;
  }

  // :active
  #{$output-selector}:active,
  #{$output-selector}--active.static {
    @extend #{$input-selector}--active-light;
  }
  html.dark #{$output-selector}:active,
  html.dark #{$output-selector}--active.static {
    @extend #{$input-selector}--active-dark;
  }

  // :disabled
  #{$output-selector}:disabled,
  #{$output-selector}--disabled.static {
    @extend #{$input-selector}--disabled-light;
  }
  html.dark #{$output-selector}:disabled,
  html.dark #{$output-selector}--disabled.static {
    @extend #{$input-selector}--disabled-dark;
  }
}

@mixin monochrome-selectors($input-selector, $output-selector, $scheme) {
  #{$output-selector} {
    &--on-surface {
      @extend #{$input-selector}--on-surface-#{$scheme} !optional;
    }
    &--on-primary {
      @extend #{$input-selector}--on-primary-#{$scheme} !optional;
    }
    &--on-primary-hover,
    &--on-primary:hover {
      @extend #{$input-selector}--on-primary-hover-#{$scheme} !optional;
    }
    &--on-primary-active,
    &--on-primary:active {
      @extend #{$input-selector}--on-primary-active-#{$scheme} !optional;
    }
    &--on-disabled {
      @extend #{$input-selector}--on-disabled-#{$scheme} !optional;
    }
    &--on-message {
      @extend #{$input-selector}--on-message-#{$scheme} !optional;
    }
    &--on-elevation {
      @extend #{$input-selector}--on-elevation-#{$scheme} !optional;
    }
    &--primary {
      @extend #{$input-selector}--primary-#{$scheme} !optional;
    }
    &--primary-hover,
    &--primary:hover {
      @extend #{$input-selector}--primary-hover-#{$scheme} !optional;
    }
    &--primary-active,
    &--primary:active {
      @extend #{$input-selector}--primary-active-#{$scheme} !optional;
    }
    &--primary-disabled {
      @extend #{$input-selector}--primary-disabled-#{$scheme} !optional;
    }
    &--error {
      @extend #{$input-selector}--error-#{$scheme} !optional;
    }
    &--warning {
      @extend #{$input-selector}--warning-#{$scheme} !optional;
    }
    &--success {
      @extend #{$input-selector}--success-#{$scheme} !optional;
    }
    &--neutral {
      @extend #{$input-selector}--neutral-#{$scheme} !optional;
    }
    &--highlighted {
      @extend #{$input-selector}--highlighted-#{$scheme} !optional;
    }
    &--bright {
      @extend #{$input-selector}--bright-#{$scheme} !optional;
    }
  }
}

// call multicolor (dark & light)
@each $list-name, $list in $all-multicolor-lists {
  @each $icon in $list {
    @include multicolor-selectors(
      $input-selector: "%icon__#{$list-name}-#{$icon}",
      $output-selector: ".icon__#{$list-name}-#{$icon}"
    );
  }
}

// call monochrome light
@each $list-name, $list in $all-monochrome-lists {
  @each $icon in $list {
    // light
    @include monochrome-selectors(
      $input-selector: "%icon__#{$list-name}-#{$icon}",
      $output-selector: ".icon__#{$list-name}-#{$icon}",
      $scheme: "light"
    );
    // dark
    @include monochrome-selectors(
      $input-selector: "%icon__#{$list-name}-#{$icon}",
      $output-selector: "html.dark .icon__#{$list-name}-#{$icon}",
      $scheme: "dark"
    );
  }
}
