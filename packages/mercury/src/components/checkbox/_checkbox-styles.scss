@import "tokens";
@import "../../base/common";

%checkbox {
  @include checkbox-tokens();
  // TODO (inherit this from the form-control
  font-family: var(--mer-form-input__font-family);
  font-size: var(--mer-form-input__font-size);
  line-height: var(--mer-line-height--regular);
  color: var(--mer-form-input__color);
  // END TODO (inherit this from the form-control)

  // Input
  &__input {
    border: var(--mer-form-input__border);
    border-radius: var(--mer-border__radius--2xs);

    &--focus {
      @include focus-style(true);
    }

    &--checked-and-indeterminate {
      border-color: var(--mer-color__neutral-gray--300);
    }

    // Not implemented yet in the control
    &--error {
      background-color: var(--colors-Foundation-un-color__red--5);
    }

    &--disabled {
      border-color: var(--mer-border-color__primary--disabled);
    }
  }

  // Option
  &__option {
    &--checked {
      color: var(--mer-border-color__neutral--active);
    }

    &--indeterminate {
      color: var(--mer-color__neutral-gray--300);
      block-size: var(--mer-spacing--3xs);
    }

    // Not implemented yet in the control
    &--error {
      color: var(--mer-color__message-red--100);
      border-color: var(--mer-border-color__error);
    }

    &--disabled {
      color: var(--mer-accent__primary--disabled);
      border-color: var(-mer-border-color__primary--disabled);
    }
  }

  // Label
  &__label {
    @extend %label-styles-base;
    @extend %label-styles-position-inline;

    &--disabled {
    }
  }
}

/// @group Checkbox
/// @param {String} $checkbox-selector [".checkbox"] -
/// @param {String} $checkbox__input-selector [".checkbox::part(input)"] -
/// @param {String} $checkbox__input--disabled-selector [".checkbox::part(input disabled)"] -
/// @param {String} $checkbox__input--checked-selector [".checkbox::part(input checked)"] -
/// @param {String} $checkbox__input--indeterminate-selector [".checkbox::part(input indeterminate)"] -
/// @param {String} $checkbox__input--error-selector [".checkbox::part(input error)"] -
/// @param {String} $checkbox__option--disabled-selector [".checkbox::part(option disabled)"] -
/// @param {String} $checkbox__option--checked-selector [".checkbox::part(option checked)"] -
/// @param {String} $checkbox__option--indeterminate-selector [".checkbox::part(option indeterminate)"] -
/// @param {String} $checkbox__option--error-selector [".checkbox::part(option error)"] -
/// @param {String} $checkbox__label-selector [".checkbox::part(label)"] -
/// @param {String} $checkbox__label--disabled-selector [".checkbox::part(label disabled)"] -
/// @param {Boolean} $add--disabled [true] -
/// @param {Boolean} $add--error [true] -
/// @param {Boolean} $add--label [true] -
@mixin checkbox(
  $checkbox-selector: ".checkbox",

  $checkbox__input-selector: ".checkbox::part(input)",

  $checkbox__input--disabled-selector: ".checkbox::part(input disabled)",

  $checkbox__input--checked-selector: ".checkbox::part(input checked)",

  $checkbox__input--indeterminate-selector:
    ".checkbox::part(input indeterminate)",

  $checkbox__input--error-selector: ".checkbox::part(input error)",

  $checkbox__option--disabled-selector: ".checkbox::part(option disabled)",

  $checkbox__option--checked-selector: ".checkbox::part(option checked)",

  $checkbox__option--indeterminate-selector:
    ".checkbox::part(option indeterminate)",

  $checkbox__option--error-selector: ".checkbox::part(option error)",

  $checkbox__label-selector: ".checkbox::part(label)",

  $checkbox__label--disabled-selector: ".checkbox::part(label disabled)",

  $add--disabled: true,
  $add--error: true,
  $add--label: true
) {
  #{$checkbox-selector} {
    @extend %checkbox;
    &:hover {
      &::part(label) {
        // extend doesn't seem to work here.
        @include label-styles("hover"); //WA
      }
    }
  }

  // Input
  #{$checkbox__input-selector} {
    @extend %checkbox__input;

    &:focus {
      @extend %checkbox__input--focus;
    }
  }
  #{$checkbox__input--checked-selector} {
    @extend %checkbox__input--checked-and-indeterminate;
  }

  #{$checkbox__input--indeterminate-selector} {
    @extend %checkbox__input--checked-and-indeterminate;
  }

  // Option
  #{$checkbox__option--checked-selector} {
    @extend %checkbox__option--checked;
  }

  #{$checkbox__option--indeterminate-selector} {
    @extend %checkbox__option--indeterminate;
  }

  // Label
  @if $add--label {
    #{$checkbox__label-selector} {
      @extend %checkbox__label;
    }
  }

  // Disabled
  @if $add--disabled {
    // Input
    #{$checkbox__input--disabled-selector} {
      @extend %checkbox__input--disabled;
    }

    // Option
    #{$checkbox__option--disabled-selector} {
      @extend %checkbox__option--disabled;
    }

    // Label
    @if $add--label {
      #{$checkbox__label--disabled-selector} {
        @extend %checkbox__label--disabled;
      }
    }
  }

  // Error
  @if $add--error {
    // Input
    #{$checkbox__input--error-selector} {
      @extend %checkbox__input--error;
    }

    // Option
    #{$checkbox__option--error-selector} {
      @extend %checkbox__option--error;
    }
  }
}
