//monochrome
@mixin button-icon-style-monochrome(
  $input-selector,
  $output-selector,
  $light: true,
  $dark: true,
  $on-surface: true,
  $on-primary: true,
  $on-primary-active: true
) {
  //light
  @if $light {
    #{$output-selector} {
      @if $on-surface {
        &--on-surface {
          @extend #{$input-selector}--on-surface-light !optional;
        }
      }
      @if $on-primary {
        &--on-primary {
          @extend #{$input-selector}--on-primary-light !optional;
        }
      }
      @if $on-primary-active {
        &--on-primary:active {
          @extend #{$input-selector}--on-primary-active-light !optional;
        }
      }
    }
  }
  //dark
  @if $dark {
    html.dark #{$output-selector} {
      @if $on-surface {
        @if $dark {
          &--on-surface {
            @extend #{$input-selector}--on-surface-dark !optional;
          }
        }
      }
      @if $on-primary {
        @if $dark {
          &--on-primary {
            @extend #{$input-selector}--on-primary-dark !optional;
          }
        }
      }
      @if $on-primary-active {
        @if $dark {
          &--on-primary:active {
            @extend #{$input-selector}--on-primary-active-dark !optional;
          }
        }
      }
    }
  }
}

//multicolor
@mixin button-icon-style-multicolor(
  $input-selector,
  $output-selector,
  $light: true,
  $dark: true,
  $enabled: true,
  $hover: true,
  $active: true,
  $disabled: true
) {
  // enabled
  @if $enabled and $light {
    #{$output-selector} {
      @extend #{$input-selector}--enabled-light;
    }
  }
  @if $enabled and $dark {
    html.dark #{$output-selector} {
      @extend #{$input-selector}--enabled-dark;
    }
  }

  // :hover
  @if $hover and $light {
    #{$output-selector}:hover {
      @extend #{$input-selector}--hover-light;
    }
  }
  @if $hover and $dark {
    html.dark #{$output-selector}:hover {
      @extend #{$input-selector}--hover-dark;
    }
  }

  // :active
  @if $active and $light {
    #{$output-selector}:active {
      @extend #{$input-selector}--active-light;
    }
  }
  @if $active and $dark {
    html.dark #{$output-selector}:active {
      @extend #{$input-selector}--active-dark;
    }
  }

  // :disabled
  @if $disabled and $light {
    #{$output-selector}:disabled {
      @extend #{$input-selector}--disabled-light;
    }
  }
  @if $disabled and $dark {
    html.dark #{$output-selector}:disabled {
      @extend #{$input-selector}--disabled-dark;
    }
  }
}

// Generate monochrome icons (light and/or dark)
@each $list-name, $list in $all-monochrome-lists {
  @each $icon in $list {
    @include button-icon-style-monochrome(
      $input-selector: "%icon__#{$list-name}-#{$icon}",
      $output-selector: ".icon__#{$list-name}-#{$icon}"
    );
  }
}

//Generate multicolor icons (light and/or dark)
@each $list-name, $list in $all-multicolor-lists {
  @each $icon in $list {
    @include button-icon-style-multicolor(
      $input-selector: "%icon__#{$list-name}-#{$icon}",
      $output-selector: ".icon__#{$list-name}-#{$icon}"
    );
  }
}
