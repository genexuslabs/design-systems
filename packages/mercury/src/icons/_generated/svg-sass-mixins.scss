@import "all-lists.scss"; 

/* - - - - - - - - - - - - - - - - - - 
MONOCHROME CONSTRUCTS
- - - - - - - - - - - - - - - - - - */

// functions for monochrome or multicolor:
@function category-is-excluded($category, $categories-list) {
  @return index($category, $categories-list) != null;
}

// functions for monochrome only:
@function get-monochrome-category-colors($category) {
  @return map-get($monochrome-categories, $category);
}

@function get-monochrome-color-states($color) {
  @return map-get($monochrome-colors, $color);
}
  
// functions for multicolor only:
@function get-multicolor-color-states(){
  $multicolorStates: (enabled, hover, active, disabled);
  @return $multicolorStates;
}

@mixin generate-monochrome-icons-selectors(
  $all-monochrome-lists,
  $css-prefix: "icon",
  $prefix-category-separator: "__",
  $category-icon-separator: "_",
  $icon-color-separator: "_",
  $color-state-separator: "--",
  $ignored-categories
) {
  @each $category-name, $category-icons in $all-monochrome-lists {
    $category-is-excluded: category-is-excluded(
      $category-name,
      $ignored-categories
    );
    @if (not($category-is-excluded)) {
      $category-colors: get-monochrome-category-colors($category-name);
      @each $icon in $category-icons {
        @each $color in $category-colors {
          $color-states: get-monochrome-color-states($color);
          @each $state in $color-states {
            .#{$css-prefix}#{$prefix-category-separator}#{$category-name}#{$category-icon-separator}#{$icon}#{$icon-color-separator}#{$color} {
              &:#{$state} {
                --icon-path: var(
                  --icon#{$prefix-category-separator}#{$category-name}#{$category-icon-separator}#{$icon}#{$icon-color-separator}#{$color}#{$color-state-separator}#{$state}
                );
              }
            }
          }
        }
      }
    }
  }
}

/* - - - - - - - - - - - - - - - - - - 
MULTICOLOR CONSTRUCTS
- - - - - - - - - - - - - - - - - - */

@mixin generate-multicolor-icons-selectors(
  $all-multicolor-lists,
  $css-prefix: "icon",
  $prefix-category-separator: "__",
  $category-icon-separator: "_",
  $icon-state-separator: "--",
  $ignored-categories
) {
  @each $category-name, $category-icons in $all-multicolor-lists {
    $category-is-excluded: category-is-excluded(
      $category-name,
      $ignored-categories
    );
    @if (not($category-is-excluded)) {
      @each $icon in $category-icons {
        $icon-states: get-multicolor-color-states();
        @each $state in $icon-states {
          .#{$css-prefix}#{$prefix-category-separator}#{$category-name}#{$category-icon-separator}#{$icon} {
            &:#{$state} {
              --icon-path: var(
                --icon#{$prefix-category-separator}#{$category-name}#{$category-icon-separator}#{$icon}#{$icon-state-separator}#{$state}
              );
            }
          }
        }
      }
    }
  }
}