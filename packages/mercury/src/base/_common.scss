@import "../../../common/base";

/*----------------------
Focus
----------------------*/
@mixin focus-style($outline: false) {
  @if $outline == true {
    outline: var(--focus__outline-width)
      var(--focus__outline-style)
      var(--focus__outline-color);
    outline-offset: var(--focus__outline-offset);
  } @else {
    border-color: var(--borders-un-border-color__focused);
  }
}

/*----------------------
Scrollbar
----------------------*/
%scrollbar-styles {
  //scrollbar
  &::-webkit-scrollbar {
    width: var(--scrollbar__size);
    height: var(--scrollbar__size);
  }

  // track
  &::-webkit-scrollbar-track {
    background-color: var(--scrollbar-track__bg-color);
    border-radius: var(--scrollbar-track__border-radius);
  }

  // thumb
  &::-webkit-scrollbar-thumb {
    background-color: var(--scrollbar-thumb__bg-color);
    border-radius: var(--scrollbar-thumb__border-radius);
  }

  // thumb:hover
  &::-webkit-scrollbar-thumb:hover {
    background-color: var(--scrollbar-thumb__bg-color--hover);
  }

  // corner
  &::-webkit-scrollbar-corner {
    background: var(--scrollbar-corner__bg);
  }
}
@mixin scrollbar-styles() {
  @extend %scrollbar-styles;
}

/*--------------------------------------------------------
Controls (button, combo-box, form-text, etc...)
Note: not every styles should apply. For example, the button
has its own colors, but it should share the same block-size.
--------------------------------------------------------*/
@mixin control($styles) {
  // Colors
  @if $styles == "colors-enabled" {
    background-color: var(--control__bg-color);
    color: var(--control__color);
  }
  @if $styles == "colors-hover" {
    --control__border-color: var(--control__border-color--hover);
  }
  @if $styles == "colors-disabled" {
    --control__bg-color: var(--control__background-color--disabled);
    --control__border-color: var(--control__border-color--disabled);
    --control__color: var(--control__color--disabled);
  }
  // Border
  @if $styles == "border" {
    border-width: var(--control__border-width);
    border-style: var(--control__border-style);
    border-color: var(--control__border-color);
    border-radius: var(--control__border-radius);
  }
  // Font Face
  @if $styles == "font-face" {
    font-family: var(--control__font-family);
    font-weight: var(--control__font-weight);
  }
  // Font Size
  @if $styles == "font-size-small" {
    font-size: var(--control__font-size--small);
  }
  @if $styles == "font-size-regular" {
    font-size: var(--control__font-size--regular);
  }
  // Height
  @if $styles == "height" {
    block-size: var(--control__height);
  }
  // Padding
  @if $styles == "padding" {
    padding-block: var(--control__padding-block);
    padding-inline: var(--control__padding-inline);
  }
  @if $styles == "padding-inline" {
    padding-inline: var(--control__padding-inline);
  }
  @if $styles == "icon-gap" {
    @include icon-gap-common-styles(var(--control__icon-gap));
  }
  // Placeholder
  @if $styles == "placeholder" {
    color: var(--control-placeholder__color);
    font-style: var(--control-placeholder__font-style);
  }
}
%control-colors-enabled {
  @include control($styles: "colors-enabled");
}
%control-colors-hover {
  @include control($styles: "colors-hover");
}
%control-colors-disabled {
  @include control($styles: "colors-disabled");
}
%control-border {
  @include control($styles: "border");
}
%control-font-face {
  @include control($styles: "font-face");
}
%control-font-size-small {
  @include control($styles: "font-size-small");
}
%control-font-size-regular {
  @include control($styles: "font-size-regular");
}
%control-height {
  @include control($styles: "height");
}
%control-padding {
  @include control($styles: "padding");
}
%control-padding-inline {
  @include control($styles: "padding-inline");
}
%control-icon-gap {
  @include control($styles: "icon-gap");
}
%control-placeholder {
  @include control($styles: "placeholder");
}

/*--------------------------------------------------------
Control Tiny (checkbox, radio-button)
--------------------------------------------------------*/

@mixin control-tiny($styles) {
  @if $styles == "size" {
    // in chameleon this is determined by the custom property "--ch-checkbox__container-size"
    block-size: var(--control-tiny__size);
    inline-size: var(--control-tiny__size);
  }
  @if $styles == "border" {
    border-width: var(--label-border__width);
    border-style: var(--label-border__style);
    border-color: var(--control__border-color);
    border-radius: var(--label-border__radius);
  }
  @if $styles == "border-hover" {
    --control__border-color: var(--control__border-color--hover);
  }
  @if $styles == "border-disabled" {
    --control__border-color: var(--control__border-color--disabled);
  }
  @if $styles == "border-error" {
    --control__border-color: var(--control__border-color--error);
  }
}
%control-tiny-size {
  @include control-tiny($styles: "size");
}
%control-tiny-border {
  @include control-tiny($styles: "border");
}
%control-tiny-border-hover {
  @include control-tiny($styles: "border-hover");
}
%control-tiny-border-disabled {
  @include control-tiny($styles: "border-disabled");
}
%control-tiny-border-error {
  @include control-tiny($styles: "border-error");
}

/*------------------------------------------------------------------------
Items Container (applies to every item container (tree, grid, list, etc...)
-------------------------------------------------------------------------*/

@mixin items-container($styles) {
  // Colors
  @if $styles == "colors" {
    background-color: var(--items-container__bg-color);
    border-color: var(--items-container__border-color);
  }
  // Padding
  @if $styles == "padding" {
    padding-block: var(--items-container__padding-block);
    padding-inline: var(--items-container__padding-inline);
  }
  // Type
  @if $styles == "type-dropdown" {
    border-radius: var(--items-container__border-radius);
    box-shadow: var(--items-container__box-shadow);
  }
  // Gap
  @if $styles == "gap" {
    gap: var(--items-container__gap);
  }
  // Height
  @if $styles == "max-height" {
    max-block-size: var(--items-container__max-block-size);
  }
}
%items-container-colors {
  @include items-container($styles: "colors");
}
%items-container-padding {
  @include items-container($styles: "padding");
}
%items-container-type-dropdown {
  @include items-container($styles: "type-dropdown");
}
%items-container-gap {
  @include items-container($styles: "gap");
}
%items-container-max-height {
  @include items-container($styles: "max-height");
}

/*-------------------------------------------------------------------
Item (applies to every item (tree, grid, list, etc...) or Item Header
-------------------------------------------------------------------*/

@mixin item($styles) {
  // Colors
  @if $styles == "colors-enabled" {
    background-color: var(--item__bg-color);
    border-color: var(--item__border-color);
    color: var(--item__color);
  }
  @if $styles == "colors-hover" {
    --item__bg-color: var(--item__bg-color--hover);
    --item__border-color: var(--item__border-color--hover);
    --item__color: var(--item__color--hover);
  }
  @if $styles == "colors-selected" {
    --item__bg-color: var(--item__bg-color--selected);
    --item__border-color: var(--item__border-color--selected);
    --item__color: var(--item__color--selected);
  }
  @if $styles == "colors-selected-hover" {
    --item__bg-color: var(--item__bg-color--selected-hover);
    --item__border-color: var(--item__border-color--selected-hover);
    --item__color: var(--item__color--selected-hover);
  }
  @if $styles == "colors-disabled" {
    --item__bg-color: var(--item__bg-color--disabled);
    --item__border-color: var(--item__border-color--disabled);
    --item__color: var(--item__color--disabled);
  }
  // Border
  @if $styles == "border" {
    border: var(--item__border-width)
      var(--item__border-style)
      var(--item__border-color);
  }
  @if $styles == "border-block-end" {
    border-block-end: var(--item__border-width)
      var(--item__border-style)
      var(--item__border-color);
  }
  // Border Radius
  @if $styles == "border-radius" {
    border-radius: var(--item__border-radius);
  }
  // Padding
  @if $styles == "padding" {
    padding-block: var(--item__padding-block);
    padding-inline: var(--item__padding-inline);
  }
  @if $styles == "padding-inline" {
    padding-inline: var(--item__padding-inline);
  }
  // Height
  @if $styles == "height-regular" {
    block-size: var(--item__height--regular);
  }
  @if $styles == "height-large" {
    block-size: var(--item__height--large);
  }
  // Font Face
  @if $styles == "font-face-header" {
    font-family: var(--item__font-family);
    font-weight: var(--mer-item-header__font-weight);
  }
  @if $styles == "font-face-item" {
    font-family: var(--item__font-family);
    font-weight: var(--item__font-weight);
  }
  // Font Size
  @if $styles == "font-size-small" {
    font-size: var(--item__font-size--small);
  }
  @if $styles == "font-size-regular" {
    font-size: var(--item__font-size--regular);
  }
}
%item-colors-enabled {
  @include item($styles: "colors-enabled");
}
%item-colors-hover {
  @include item($styles: "colors-hover");
}
%item-colors-selected {
  @include item($styles: "colors-selected");
}
%item-colors-selected-hover {
  @include item($styles: "colors-selected-hover");
}
%item-colors-disabled {
  @include item($styles: "colors-disabled");
}
%item-border {
  @include item($styles: "border");
}
%item-border-block-end {
  @include item($styles: "border-block-end");
}
%item-padding {
  @include item($styles: "padding");
}
%item-padding-inline {
  @include item($styles: "padding-inline");
}
%item-height-regular {
  @include item($styles: "height-regular");
}
%item-height-large {
  @include item($styles: "height-large");
}
%item-border-radius {
  @include item($styles: "border-radius");
}
%item-font-face-header {
  @include item($styles: "font-face-header");
}
%item-font-face-item {
  @include item($styles: "font-face-item");
}
%item-font-size-small {
  @include item($styles: "font-size-small");
}
%item-font-size-regular {
  @include item($styles: "font-size-regular");
}

/*----------------------
Label
----------------------*/
// Defined here to facilitate the application of the label styles on the label element,
// as well as on the ch-checkbox label.
@mixin label-styles($styles) {
  @if $styles == "font" {
    color: var(--label__color);
    font-family: var(--label__font-family);
    font-weight: var(--label__font-weight);
    font-size: var(--label__font-size);
    line-height: var(--label__line-height);
  }
  @if $styles == "gap" {
    gap: 8px;
  }
  @if $styles == "color-hover" {
    --label__color: var(--label__color--hover);
  }
  @if $styles == "color-disabled" {
    --label__color: var(--label__color--disabled);
  }
  @if $styles == "color-error" {
    --label__color: var(--label__color--error);
  }
}
%label-font {
  @include label-styles($styles: "font");
}
%label-gap {
  @include label-styles($styles: "gap");
}
%label-color-hover {
  @include label-styles($styles: "color-hover");
}
%label-color-disabled {
  @include label-styles($styles: "color-disabled");
}
%label-color-error {
  @include label-styles($styles: "color-error");
}

/*----------------------
Window
----------------------*/
%window-styles {
  border: var(--window__border);
  border-radius: var(--window__border-radius);
  padding: var(--window__padding);
  background-color: var(--window__bg-color);
  box-shadow: var(--mer-box-shadow--01);
}

/*----------------------
Dropdown
----------------------*/
%dropdown-styles {
  box-shadow: var(--mer-box-shadow--01);
  border-radius: var(--mer-border__radius--sm);
}

/*----------------------
Dialog Footer
----------------------*/
// Defined here to be used on /components/dialog as well as to replicate
// dialog footer styles on genexus-ide-ui components
%control-footer {
  padding: var(--mer-spacing--xs) var(--mer-spacing--sm);
  gap: var(--mer-spacing--sm);
  align-items: center;

  &--with-border {
    border-block-start: var(--mer-border__width--sm) solid
      var(--mer-color__elevation--04);
  }
}
@mixin control-footer(
  $selector: ".control-footer",
  $with-border-selector: ".control-footer--border",
  $with-border: true
) {
  #{$selector} {
    @extend %control-footer;
  }

  @if $with-border {
    #{$with-border-selector} {
      @extend %control-footer--with-border;
    }
  }
}
