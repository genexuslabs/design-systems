@import "../../../common/base";

// ----------------------
// Focus
// ----------------------
@mixin focus-outline() {
  outline: var(--focus__outline-width) var(--focus__outline-style)
    var(--focus__outline-color);
  outline-offset: var(--focus__outline-offset);
}
@mixin focus-border() {
  border-color: var(--borders-un-border-color__focused);
}

// ----------------------
// Scrollbar Styles
// ----------------------
@mixin scrollbar-styles() {
  scrollbar-width: thin;
  scrollbar-color: var(--scrollbar-thumb__bg-color)
    var(--scrollbar-track__bg-color);

  //scrollbar
  &::-webkit-scrollbar {
    width: var(--scrollbar__size);
    height: var(--scrollbar__size);
  }

  // track
  &::-webkit-scrollbar-track {
    background-color: var(--scrollbar-track__bg-color);
    border-radius: var(--scrollbar-track__border-radius);
  }

  // thumb
  &::-webkit-scrollbar-thumb {
    background-color: var(--scrollbar-thumb__bg-color);
    border-radius: var(--scrollbar-thumb__border-radius);
  }

  // corner
  &::-webkit-scrollbar-corner {
    background: var(--scrollbar-corner__bg);
  }
}

// ----------------------
// Scrollbar Components
// ----------------------
@mixin scrollbar-components() {
  :host(.ch-scrollable),
  .ch-scrollable,
  .scrollable {
    @include scrollbar-styles();
  }
}

// ----------------------
// Control
// ----------------------

// Colors
@mixin control-colors-enabled() {
  background-color: var(--control__bg-color);
  color: var(--control__color);
  --ch-placeholder-color: var(--control-placeholder__color);
  // enabled border color is defined in control-border()
}
@mixin control-colors-hover() {
  --control__border-color: var(--control__border-color--hover);
}
@mixin control-colors-disabled() {
  --control__bg-color: var(--control__background-color--disabled);
  --control__border-color: var(--control__border-color--disabled);
  --control__color: var(--control__color--disabled);
  --ch-placeholder-color: var(--control-placeholder__color--disabled);
}
@mixin control-colors-error() {
  --control__border-color: var(--control__border-color--error);
}
// Border
@mixin control-border() {
  border-width: var(--control__border-width);
  border-style: var(--control__border-style);
  border-color: var(--control__border-color);
  border-radius: var(--control__border-radius);
}
@mixin control-remove-border() {
  // This resets the border applied
  // (for controls inside the property grid)
  --control__border-width: 0;
  --control__border-color: transparent;
  --control__border-radius: 0;
}
// Font
@mixin control-font-weight-regular() {
  font-weight: var(--control__font-weight--regular);
}
@mixin control-font-weight-semi-bold() {
  font-weight: var(--control__font-weight--semi-bold);
}
// Font Size
@mixin control-font-size-small() {
  font-size: var(--control__font-size--small);
  line-height: var(--control__line-height);
}
@mixin control-font-size-regular() {
  font-size: var(--control__font-size--regular);
  line-height: var(--control__line-height);
}
// Height
@mixin control-height-regular() {
  block-size: var(--control__height);
  // to be removed (TODO)
  // fixed block-size comes with some issues.
}
// Padding
@mixin control-padding-inline() {
  padding-inline: var(--control__padding-inline);
}
@mixin control-padding-block() {
  padding-block: var(--control__padding-block);
}
@mixin control-padding-inline-block() {
  padding-block: var(--control__padding-block);
  padding-inline: var(--control__padding-inline);
}
// Placeholder
@mixin control-placeholder() {
  color: var(--control-placeholder__color);
  font-style: var(--control-placeholder__font-style);
}

// ----------------------
// Control Tiny
// ----------------------

@mixin control-tiny-size() {
  block-size: var(--control-tiny__size);
  inline-size: var(--control-tiny__size);
}
@mixin control-tiny-border() {
  border-width: var(--control__border-width);
  border-style: var(--control__border-style);
  border-color: var(--control__border-color);
  border-radius: var(--control__border-radius);
}
@mixin control-tiny-border-hover() {
  --control__border-color: var(--control__border-color--hover);
}
@mixin control-tiny-border-disabled() {
  --control__border-color: var(--control__border-color--disabled);
}
@mixin control-tiny-border-error() {
  --control__border-color: var(--control__border-color--error);
}

// ----------------------
// Items Container
// ----------------------

@mixin items-container-border() {
  border-style: var(--items-container__border-style);
  border-width: var(--items-container__border-width);
}
@mixin items-container-border-radius() {
  border-radius: var(--items-container__border-radius);
}
@mixin items-container-colors() {
  background-color: var(--items-container__bg-color);
  border-color: var(--items-container__border-color);
}
@mixin items-container-padding() {
  padding-block: var(--items-container__padding-block);
  padding-inline: var(--items-container__padding-inline);
}
@mixin items-container-dropdown() {
  box-shadow: var(--items-container__box-shadow);
}
@mixin items-container-gap() {
  gap: var(--items-container__gap);
}
@mixin items-container-gap-small() {
  gap: var(--items-container__gap--small);
}
@mixin items-container-max-height() {
  max-block-size: var(--items-container__max-block-size);
}
@mixin items-container-separator() {
  block-size: var(--items-container-separator__block-size);
  inline-size: var(--items-container-separator__inline-size);
  background-color: var(--items-container-separator__bg-color);
}

// ------------------------------------
// Single Item (Every item except grid)
// ------------------------------------

@mixin item-colors-enabled() {
  background-color: var(--item__bg-color);
  border-color: var(--item__border-color);
  color: var(--item__color);
}
@mixin item-colors-hover() {
  --item__bg-color: var(--item__bg-color--hover);
  --item__border-color: var(--item__border-color--hover);
  --item__color: var(--item__color--hover);
}
@mixin item-colors-selected() {
  --item__bg-color: var(--item__bg-color--selected);
  --item__border-color: var(--item__border-color--selected);
  --item__color: var(--item__color--selected);
}
@mixin item-colors-selected-hover() {
  --item__bg-color: var(--item__bg-color--selected-hover);
  --item__border-color: var(--item__border-color--selected-hover);
  --item__color: var(--item__color--selected-hover);
}
@mixin item-colors-disabled() {
  --item__bg-color: var(--item__bg-color--disabled);
  --item__border-color: var(--item__border-color--disabled);
  --item__color: var(--item__color--disabled);
}
@mixin item-border() {
  border: var(--item__border-width) var(--item__border-style)
    var(--item__border-color);
}
@mixin item-border-block-end() {
  border-block-end: var(--item__border-width) var(--item__border-style)
    var(--item__border-color);
}
@mixin item-border-radius() {
  border-radius: var(--item__border-radius);
}
@mixin item-gap() {
  gap: var(--item__gap--regular);
}
@mixin item-padding() {
  padding-block: var(--item__padding-block);
  padding-inline: var(--item__padding-inline);
}
@mixin item-padding-block() {
  padding-block: var(--item__padding-inline);
}
@mixin item-padding-inline() {
  padding-inline: var(--item__padding-inline);
}
@mixin item-height-regular() {
  block-size: var(--item__height--regular);
}
@mixin item-height-large() {
  block-size: var(--item__height--large);
}
@mixin item-font() {
  line-height: var(--item__line-height);
  font-size: var(--item__font-size);
  font-weight: var(--item__font-weight);
}
@mixin item-font-size-small() {
  --item__font-size: var(--item__font-size--small);
}
@mixin item-font-header() {
  // item header font-size and line-height has to be the same as
  // item font-size and line-height in order for the computed height
  // to be the same.
  line-height: var(--item__line-height);
  font-size: var(--item__font-size);
  font-weight: var(--item-header__font-weight);
}

// ---------------------------------
// Grid Item
// ---------------------------------

// Row
@mixin grid-row-colors-enabled() {
  background-color: var(--item__bg-color);
  color: var(--item__color);
}
@mixin grid-row-colors-highlighted() {
  --item__bg-color: var(--item__bg-color--hover);
  --item__color: var(--item__color--hover);
}
@mixin grid-row-colors-selected() {
  --item__bg-color: var(--item__bg-color--selected);
  --item__color: var(--item__color--selected);
}
@mixin grid-row-dragging() {
  box-shadow: var(--mer-box-shadow--01);
}
@mixin grid-cell-border-inline-block() {
  // this mixin uses the box-shadow property, but it looks
  // as a border to the user.
  box-shadow: var(--grid-cell__box-shadow-inline-block);
}
@mixin grid-cell-padding-inline() {
  padding-inline: var(--grid-cell__padding-block);
}
@mixin grid-cell-padding-block() {
  padding-block: var(--grid-cell__padding-block);
}
@mixin grid-cell-padding-inline-block() {
  padding-block: var(--grid-cell__padding-block);
  padding-inline: var(--grid-cell__padding-inline);
}
@mixin grid-cell-remove-padding() {
  // we should redefine '--grid-cell__padding-inline' here because when a control
  // is inside a a tabular-grid-cell the cell padding-inline value is required to
  // be applied on the control padding-inline.
  padding-block: 0;
  padding-inline: 0;
}
@mixin grid-rowset-legend-padding-block() {
  padding-block-start: var(--mer-spacing--2xs);
  padding-block-end: var(--mer-spacing--2xs);
}
@mixin grid-rowset-legend-colors-enabled() {
  --grid-rowset-legend__bg-color: var(--mer-surface__elevation--02);
  background-color: var(--grid-rowset-legend__bg-color);
}
@mixin grid-rowset-legend-colors-hover() {
  --grid-rowset-legend__bg-color: var(--mer-surface__elevation--03);
}
@mixin grid-rowset-legend-colors-active() {
  --grid-rowset-legend__bg-color: var(--mer-surface__elevation--02);
}

// ----------------------
// Tab Caption (Button)
// ----------------------
@mixin tab-button-border-block() {
  border-block: var(--tab-caption__border-width)
    var(--tab-caption__border-style) var(--tab-caption__border-color);
}
@mixin tab-button-border-block-end() {
  border-block-end: var(--tab-caption__border-width)
    var(--tab-caption__border-style) var(--tab-caption__border-color);
}
@mixin tab-button-border-block-start() {
  border-block-start: var(--tab-caption__border-width)
    var(--tab-caption__border-style) var(--tab-caption__border-color);
}
@mixin tab-button-font() {
  font-size: var(--tab-caption__font-size);
  font-weight: var(--tab-caption__font-weight);
}
@mixin tab-button-gap() {
  gap: var(--tab-caption__gap);
}
@mixin tab-button-colors-enabled() {
  background-color: var(--tab-caption__bg-color);
  color: var(--tab-caption__color);
  border-color: var(--tab-caption__border-color);
}
@mixin tab-button-colors-hover() {
  --tab-caption__bg-color: var(--tab-caption__bg-color--hover);
  // color remains the same
  // border-color remains the same
}
@mixin tab-button-colors-disabled() {
  --tab-caption__bg-color: var(--tab-caption__bg-color--disabled);
  --tab-caption__color: var(--mer-text__primary--disabled);
  --tab-caption__border-color--selected-inline: var(
    --mer-border-color__primary--disabled
  );
  --tab-caption__border-color--selected-stack: var(
    --mer-surface__elevation--02
  );
}
@mixin tab-button-colors-selected-inline() {
  --tab-caption__bg-color: var(--tab-caption__bg-color--selected-inline);
  --tab-caption__color: var(--tab-caption__color--selected);
  --tab-caption__border-color: var(
    --tab-caption__border-color--selected-inline
  );
}
@mixin tab-button-colors-selected-stack() {
  --tab-caption__bg-color: var(--tab-caption__bg-color--selected-stack);
  --tab-caption__color: var(--tab-caption__color--selected);
  --tab-caption__border-color: var(--tab-caption__border-color--selected-stack);
}
@mixin tab-button-padding-inline() {
  padding-block: var(--tab-caption__padding-block);
  padding-inline: var(--tab-caption__padding-inline);
}
@mixin tab-button-padding-stack() {
  padding-block: var(--tab-caption__padding-block);
  padding-inline: var(--tab-caption__padding-inline);
}

// ----------------------
// Label
// ----------------------

@mixin label-font() {
  color: var(--label__color);
  font-weight: var(--label__font-weight);
  font-size: var(--label__font-size);
  line-height: var(--label__line-height);
}
@mixin label-gap-block() {
  gap: var(--label__gap--block);
}
@mixin label-gap-inline() {
  gap: var(--label__gap--inline);
}
@mixin label-color-hover() {
  --label__color: var(--label__color--hover);
}
@mixin label-color-disabled() {
  --label__color: var(--label__color--disabled);
}

// ----------------------
// Window
// ----------------------

// TODO: This styles should better be applied on the ch-window ?
%window-styles {
  border: var(--window__border);
  border-radius: var(--window__border-radius);
  padding: var(---window__padding);
  background-color: var(--window__bg-color);
  box-shadow: var(--mer-box-shadow--01);
}

// ----------------------
// Dropdown
// ----------------------

@mixin dropdown-styles() {
  box-shadow: var(--mer-box-shadow--01);
  border-radius: var(--mer-border__radius--sm);
}

// ----------------------
// Pseudo Dialog Footer
// ----------------------

@mixin control-footer-base() {
  --control-footer-justify-content: end;
  padding-block-start: var(--mer-spacing--xs);
  display: flex;
  justify-content: var(--control-footer-justify-content);
  align-items: center;
}
@mixin control-footer-border() {
  border-block-start: var(--mer-border__width--sm) solid
    var(--mer-border-color__on-elevation--01);
}
@mixin control-footer(
  $selector: ".control-footer",
  $with-border-selector: ".control-footer-with-border",
  $justify-start-selector: ".control-footer-start",
  $justify-center-selector: ".control-footer-center",
  $justify-space-between-selector: ".control-footer-space-between",
  $with-border: true
) {
  #{$selector},
  #{$with-border-selector} {
    @include control-footer-base();
  }
  #{$justify-start-selector} {
    --control-footer-justify-content: start;
  }
  #{$justify-center-selector} {
    --control-footer-justify-content: center;
  }
  #{$justify-space-between-selector} {
    --control-footer-justify-content: space-between;
  }
  @if $with-border {
    #{$with-border-selector} {
      @include control-footer-border();
    }
  }
}

// ----------------------
// Pseudo Dialog Header
// ----------------------

@mixin control-header-base() {
  padding-block-end: var(--mer-spacing--md);
}
@mixin control-header-border() {
  border-block-end: var(--mer-border__width--sm) solid
    var(--mer-border-color__on-elevation--01);
}
@mixin control-header(
  $selector: ".control-header",
  $with-border-selector: ".control-header-with-border",
  $with-border: true
) {
  #{$selector},
  #{$with-border-selector} {
    @include control-header-base();
  }
  @if $with-border {
    #{$with-border-selector} {
      @include control-header-border();
    }
  }
}

// ----------------------
// Body Spacing
// ----------------------

// This custom properties define the block and inline spacing of containers.
// i.e.: dialog, layout, etc..

%spacing-body {
  padding-block: var(--spacing-body-block-start) var(--spacing-body-block-end);
  padding-inline: var(--spacing-body-inline-start)
    var(--spacing-body-inline-end);
}

%spacing-body-block {
  padding-block: var(--spacing-body-block-start) var(--spacing-body-block-end);
}
%spacing-body-block-start {
  padding-block-start: var(--spacing-body-block-start);
}
%spacing-body-block-end {
  padding-block-end: var(--spacing-body-block-end);
}

%spacing-body-inline {
  padding-inline: var(--spacing-body-inline-start)
    var(--spacing-body-inline-end);
}
%spacing-body-inline-start {
  padding-inline-start: var(--spacing-body-inline-start);
}
%spacing-body-inline-end {
  padding-inline-end: var(--spacing-body-inline-end);
}

@mixin spacing-body(
  $body-selector: ".spacing-body",
  $body-block-selector: ".spacing-body-block",
  $body-block-start-selector: ".spacing-body-block-start",
  $body-block-end-selector: ".spacing-body-block-end",
  $body-inline-selector: ".spacing-body-inline",
  $body-inline-start-selector: ".spacing-body-inline-start",
  $body-inline-end-selector: ".spacing-body-inline-end"
) {
  #{$body-selector} {
    @extend %spacing-body;
  }
  // block
  #{$body-block-selector} {
    @extend %spacing-body-block;
  }
  #{$body-block-start-selector} {
    @extend %spacing-body-block-start;
  }
  #{$body-block-end-selector} {
    @extend %spacing-body-block-end;
  }
  // inline
  #{$body-inline-selector} {
    @extend %spacing-body-inline;
  }
  #{$body-inline-start-selector} {
    @extend %spacing-body-inline-start;
  }
  #{$body-inline-end-selector} {
    @extend %spacing-body-inline-end;
  }
}

// ----------------------
// Spinner
// ----------------------

@mixin spinner($size) {
  width: $size;
  height: $size;
  border: calc($size / 5) solid var(--mer-color__tinted-blue--50);
  border-top: calc($size / 5) solid var(--mer-color__primary-blue--300);
  border-radius: 50%;
  animation: spin var(--mer-timing--regular) linear infinite;

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
}
