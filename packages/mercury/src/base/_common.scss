/*----------------------
Focus
----------------------*/
@mixin focus-style($outline: false) {
  @if $outline == true {
    outline: var(--mer-focus__outline-width)
      var(--mer-focus__outline-style)
      var(--mer-focus__outline-color);
    outline-offset: var(--mer-focus__outline-offset);
  } @else {
    border-color: var(--borders-un-border-color__focused);
  }
}

/*----------------------
Scrollbar
----------------------*/
%scrollbar-styles {
  //scrollbar
  &::-webkit-scrollbar {
    width: var(--mer-scrollbar__size);
    height: var(--mer-scrollbar__size);
  }

  // track
  &::-webkit-scrollbar-track {
    background-color: var(--mer-scrollbar-track__bg-color);
    border-radius: var(--mer-scrollbar-track__border-radius);
  }

  // thumb
  &::-webkit-scrollbar-thumb {
    background-color: var(--mer-scrollbar-thumb__bg-color);
    border-radius: var(--mer-scrollbar-thumb__border-radius);
  }

  // thumb:hover
  &::-webkit-scrollbar-thumb:hover {
    background-color: var(--mer-scrollbar-thumb__bg-color--hover);
  }

  // corner
  &::-webkit-scrollbar-corner {
    background: var(--mer-scrollbar-corner__bg);
  }
}
@mixin scrollbar-styles() {
  @extend %scrollbar-styles;
}

/*--------------------------------------------------------
Control (applies to controls which height's should be equal.
Note: Controls like button, form-text, combo-box, etc.. 
should have the same height, in order to "look good" inline.
--------------------------------------------------------*/
@mixin control($styles: "") {
  // Base
  @if $styles == "base" {
    // generic styles
    border-style: var(--mer-control__border-style);
    border-color: var(--mer-control__border-color);
    border-width: var(--mer-control__border-width);
    font-family: var(--mer-control__font-family);
    font-size: var(--mer-control__font-size);
    font-style: var(--mer-control__font-style);
    font-weight: var(--mer-control__font-weight);
    line-height: var(--mer-control__line-height);
    text-transform: var(--mer-control__text-transform);
    align-items: center; // WA (review this)

    // structure styles (depend on size)
    border-radius: var(--mer-control__border-radius);
    block-size: var(--mer-control__block-size);
    padding-block: var(--mer-control__padding-block);
    padding-inline: 8px;
    box-sizing: border-box; // WA (To be removed)

    // color styles (depend on state)
    background-color: var(--mer-control__background-color);
    border-color: var(--mer-control__border-color);
    color: var(--mer-control__color);
  }
  // States
  @if $styles == "hover" {
    background-color: var(--mer-control__background-color--hover);
    border-color: var(--mer-control__border-color--hover);
  }
  @if $styles == "disabled" {
    background-color: var(--mer-control__background-color--disabled);
    border-color: var(--mer-control__border-color--disabled);
    --mer-control__color: var(--mer-control__color--disabled);
  }
  // Size
  @if $styles == "size-regular" {
    //ie.: button, form-text, combo-box
    --mer-control__border-radius: var(--mer-control-regular__border-radius);
    --mer-control__block-size: var(--mer-control-regular__block-size);
    --mer-control__padding-block: var(--mer-control-regular__padding-block);
    --mer-control__padding-inline: var(--mer-control-regular__padding-inline);
    --mer-control__padding-inline: 8px;
  }
  @if $styles == "size-tiny" {
    //ie.: checkbox, radio-button
    --mer-control__block-size: var(--mer-control-tiny__block-size);
    inline-size: var(--mer-control-tiny__inline-size);
  }
  // Typography
  @if $styles == "typography-regular" {
    //ie.: button, form-text, combo-box
    --mer-control__font-size: var(--mer-control-regular__font-size);
  }
  @if $styles == "typography-large" {
    //ie.: button, form-text, combo-box
    --mer-control__font-size: var(--mer-control-large__font-size);
  }
  // Placeholder
  @if $styles == "placeholder" {
    &::placeholder {
      color: var(--mer-control-placeholder__color);
    }
  }
}
%control-base {
  @include control($styles: "base");
}
%control-hover {
  @include control($styles: "hover");
}
%control-disabled {
  @include control($styles: "disabled");
}
%control-size-regular {
  @include control($styles: "size-regular");
}
%control-size-regular-squared {
  @include control($styles: "size-regular-squared");
}
%control-layout-tiny {
  @include control($styles: "layout-tiny");
}
%control-typography-regular {
  @include control($styles: "typography-regular");
}
%control-typography-large {
  @include control($styles: "typography-large");
}
%control-placeholder {
  @include control($styles: "placeholder");
}

/*------------------------------------------------------------------------
Items Container (applies to every item container (tree, grid, list, etc...)
-------------------------------------------------------------------------*/

@mixin control-items-container($styles: "base") {
  // Base
  @if $styles == "base" {
    background-color: var(--mer-items-container__bg-color);
    border-color: var(--mer-items-container__border-color);
    border-style: var(--mer-items-container__border-style);
    border-width: var(--mer-items-container__border-width);
    padding-block: var(--mer-items-container__padding-block);
    padding-inline: var(--mer-items-container__padding-inline);
  }
  // Type
  @if $styles == "type-regular" {
    --mer-items-container__border-width: var(
      --mer-items-container-regular__border-width
    );
    --mer-items-container__border-color: var(
      --mer-items-container-regular__border-color
    );
    gap: var(--mer-items-container__gap);
    --mer-items-container__padding-block: var(
      --mer-items-container-regular__padding-block
    );
    --mer-items-container__padding-inline: var(
      --mer-items-container-regular__padding-inline
    );
    --mer-items-container__gap: var(--mer-items-container-regular__gap);
  }
  @if $styles == "gap-regular" {
    // (ie.: a group inside a container that also needs gap).
    gap: var(--mer-items-container__gap);
    --mer-items-container__gap: var(--mer-items-container-regular__gap);
  }
}
%control-items-container-base {
  @include control-items-container($styles: "base");
}
%control-items-container-type-regular {
  @include control-items-container($styles: "type-regular");
}
%control-items-container-gap-regular {
  @include control-items-container($styles: "gap-regular");
}

/*----------------------------------------------------
Item (applies to every item (tree, grid, list, etc...)
----------------------------------------------------*/

// note: $style's that are not marked as ¨optional¨ should be
// applied to every item on the design system, in order to
// keep consistency. $style's that are not marked as "optional"
// are optional because items from different components could
// display different styles for that particular group/$style

@mixin control-item($styles: "enabled") {
  // Header
  @if $styles == "header-base" {
    background-color: var(--mer-item-group-header__bg-color);
    color: var(--mer-item-group-header__color);
    font-family: var(--mer-item-group-header__font-family);
    font-size: var(--mer-item-group-header__font-size);
    font-weight: var(--mer-item-group-header__font-weight);
    line-height: var(--mer-item-group-header__line-height);
    height: var(--mer-item-group-header__height);
    padding-block: var(--mer-item-group-header__padding-block);
    padding-inline: var(--mer-item-group-header__padding-inline);
    border-radius: var(--mer-item-group-header__border-radius);
  }
  @if $styles == "header-hover" {
    --mer-item-group-header__bg-color: var(
      --mer-item-group-header__bg-color--hover
    );
  }
  @if $styles == "header-disabled" {
    --mer-item-group-header__bg-color: var(
      --mer-item-group-header__bg-color--disabled
    );
    --mer-item-group-header__color: var(
      --mer-item-group-header__color--disabled
    );
  }
  // Item Base
  @if $styles == "base" {
    // generic styles
    font-family: var(--mer-item__font-family);
    font-weight: var(--mer-item__font-weight);
    line-height: var(--mer-item__line-height);

    // states styles
    background-color: var(--mer-item__bg-color);
    border: var(--mer-item__border-width)
      var(--mer-item__border-style)
      var(--mer-item__border-color);
    color: var(--mer-item__color);
    font-weight: var(--mer-item__font-weight);

    // structure styles (depend on size)
    border-radius: var(--mer-item__border-radius);
    font-size: var(--mer-item__font-size);
    gap: var(--mer-item__gap);
    height: var(--mer-item__height);
    padding-block: var(--mer-item__padding-block);
    padding-inline: var(--mer-item__padding-inline);
  }
  // Item Size
  @if $styles == "size-small" {
    //ie.: dropdown
    --mer-item__border-radius: var(--mer-item-small__border-radius);
    --mer-item__font-size: var(--mer-item-small__font-size);
    --mer-item__gap: var(--mer-item-small__gap);
    --mer-item__height: var(--mer-item-small__height);
    --mer-item__padding-block: var(--mer-item-small__padding-block);
    --mer-item__padding-inline: var(--mer-item-small__padding-inline);
  }
  @if $styles == "size-regular" {
    //ie.: notifications
    --mer-item__border-radius: var(--mer-item-regular__border-radius);
    --mer-item__font-size: var(--mer-item-regular__font-size);
    --mer-item__gap: var(--mer-item-regular__gap);
    --mer-item__height: var(--mer-item-regular__height);
    --mer-item__padding-block: var(--mer-item-regular__padding-block);
    --mer-item__padding-inline: var(--mer-item-regular__padding-inline);
  }
  // Item Border
  @if $styles == "border-block" {
    border-block-width: var(--mer-item__border-width);
  }
  @if $styles == "border-inline-block" {
    border-block-width: var(--mer-item__border-width);
    border-inline-width: var(--mer-item__border-width);
  }
  @if $styles == "border-radius" {
    border-radius: var(--mer-item__border-radius);
  }
  // Item States
  @if $styles == "hover" {
    --mer-item__bg-color: var(--mer-item__bg-color--hover);
    --mer-item__border-color: var(--mer-item__border-color--hover);
    --mer-item__color: var(--mer-item__color--hover);
  }
  @if $styles == "selected" {
    --mer-item__bg-color: var(--mer-item__bg-color--selected);
    --mer-item__border-color: var(--mer-item__border-color--selected);
    --mer-item__color: var(--mer-item__color--selected);
    --mer-item__font-weight: var(--mer-item__font-weight--selected);
  }
  @if $styles == "selected-hover" {
    --mer-item__bg-color: var(--mer-item__bg-color--selected-hover);
    --mer-item__border-color: var(--mer-item__border-color--selected-hover);
    --mer-item__color: var(--mer-item__color--selected-hover);
    --mer-item__font-weight: var(--mer-item__font-weight--selected);
  }
  @if $styles == "disabled" {
    --mer-item__bg-color: var(--mer-item__bg-color--disabled);
    --mer-item__border-color: var(--mer-item__border-color--disabled);
    --mer-item__color: var(--mer-item__color--disabled);
  }
}
%control-items-header-base {
  @include control-item($styles: "header-base");
}
%control-items-header-hover {
  @include control-item($styles: "header-hover");
}
%control-items-header-disabled {
  @include control-item($styles: "header-disabled");
}
%control-item-base {
  @include control-item($styles: "base");
}
%control-item-size-small {
  @include control-item($styles: "size-small");
}
%control-item-size-regular {
  @include control-item($styles: "size-regular");
}
%item-border-block {
  @include control-item($styles: "border-block");
}
%control-item-border-inline-block {
  @include control-item($styles: "border-inline-block");
}
%control-item-border-radius {
  @include control-item($styles: "border-radius");
}
%control-item-hover {
  @include control-item($styles: "hover");
}
%control-item-selected {
  @include control-item($styles: "selected");
}
%control-item-selected-hover {
  @include control-item($styles: "selected-hover");
}
%control-item-disabled {
  @include control-item($styles: "disabled");
}

/*----------------------
Label
----------------------*/
// Defined here to facilitate the application of the label styles on the label element,
// as well as on the ch-checkbox label.
@mixin label-styles($styles: "base") {
  @if $styles == "base" {
    font-size: var(--mer-label__font-size);
    font-family: var(--mer-label__font-family);
    font-weight: var(--mer-label__font-weight);
    line-height: var(--mer-label__line-height);
    color: var(--mer-label__color--enabled);
  }
  @if $styles == "hover" {
    color: var(--mer-label__color--hover);
  }
  @if $styles == "disabled" {
    color: var(---mer-label__color--disabled);
  }
  @if $styles == "position-inline" {
    margin-inline-start: var(--mer-label__gap--inline);
  }
  @if $styles == "position-block" {
    margin-block-end: var(--mer-label__gap--block);
  }
}
%label-styles-base {
  @include label-styles($styles: "base");
}
%label-styles-hover {
  @include label-styles($styles: "hover");
}
%label-styles-disabled {
  @include label-styles($styles: "disabled");
}
%label-styles-position-block {
  @include label-styles($styles: "position-block");
}
%label-styles-position-inline {
  @include label-styles($styles: "position-inline");
}
/*----------------------
Window
----------------------*/
@mixin label-styles($styles: "base") {
}
%window-styles {
  border: var(--mer-window__border);
  border-radius: var(--mer-window__border-radius);
  padding: var(--mer-window__padding);
  background-color: var(--mer-window__bg-color);
  box-shadow: var(--mer-box-shadow--01);
}

/*----------------------
Dropdown
----------------------*/
%dropdown-styles {
  box-shadow: var(--mer-box-shadow--01);
  border-radius: var(--mer-border__radius--sm);
}

/*----------------------
Dialog Footer
----------------------*/
// Defined here to be used on /components/dialog as well as to replicate
// dialog footer styles on genexus-ide-ui components
%control-footer {
  padding: var(--mer-spacing--xs) var(--mer-spacing--sm);
  gap: var(--mer-spacing--sm);
  align-items: center;

  &--with-border {
    border-block-start: var(--mer-border__width--sm) solid
      var(--mer-color__elevation--04);
  }
}
@mixin control-footer(
  $selector: ".control-footer",
  $with-border-selector: ".control-footer--border",
  $with-border: true
) {
  #{$selector} {
    @extend %control-footer;
  }

  @if $with-border {
    #{$with-border-selector} {
      @extend %control-footer--with-border;
    }
  }
}
