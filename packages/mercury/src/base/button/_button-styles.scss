@import "../common";

%button-base {
  @include button-common-styles();
  @include control-border();
  @include control-padding-inline-block();

  box-sizing: border-box;
  background-color: var(--button-background-color);
  color: var(--button-color);

  &--focus-visible {
    @include focus-outline();
  }
}

%button-primary {
  @extend %button-base;
  @extend %body-semi-bold-m;

  // In primary button, border color matches with background-color.

  --button-background-color: var(--mer-accent__primary);
  --control__border-color: var(--button-background-color);
  --button-color: var(--mer-text__on-primary);
  // for the loader
  --button-color--enabled: var(
    --mer-text__on-primary
  ); // a copy of --button-color
  --button-color--active: var(--mer-text__on-primary--active);

  &--hover {
    --button-background-color: var(--mer-accent__primary--hover);
    --button-color: var(--mer-text__on-primary);
  }

  &--active {
    --button-background-color: var(--mer-accent__primary--active);
    --button-color: var(--button-color--active);
  }

  &--disabled {
    --button-background-color: var(--mer-accent__primary--disabled);
    --button-color: var(--mer-text__on-disabled);
  }

  &--destructive {
    --button-background-color: var(--mer-accent__primary--destructive);
    --button-color: var(--mer-text__on-primary);

    &-hover {
      --button-background-color: var(--mer-accent__primary--destructive-hover);
      --button-color: var(--mer-text__on-primary);
    }

    &-active {
      --button-background-color: var(--mer-accent__primary--destructive-active);
      --button-color: var(--mer-text__highlighted);
    }
  }

  &--success {
    --button-background-color: var(--accent-success-enabled);
    --button-color: var(--mer-text__on-primary);

    &-hover {
      --button-background-color: var(--accent-success-hover);
      --button-color: var(--mer-text__on-primary);
    }

    &-active {
      --button-background-color: var(--accent-success-active);
      --button-color: var(--mer-text__highlighted);
    }
  }
}

%button-secondary {
  @extend %button-base;
  @extend %body-semi-bold-m;

  // Default styles for the secondary button
  --button-background-color: transparent;
  --control__border-color: var(--button-color);
  --button-color: var(--mer-text__neutral);
  // for the loader
  --button-color--enabled: var(--mer-text__neutral); // a copy of --button-color
  --button-color--active: var(--mer-text__on-primary--active);

  &--hover {
    --button-color: var(--mer-text__primary--hover);
  }

  &--active {
    --control__border-color: var(--mer-border-color__primary--active);
    --button-color: var(--button-color--active);
  }

  &--disabled {
    --button-color: var(--mer-text__on-disabled);
  }

  &--destructive {
    --button-color: var(--mer-text__highlighted);
    --control__border-color: var(--mer-border-color__error);

    &-hover {
      --button-color: var(--mer-accent__primary--destructive-hover);
      --control__border-color: var(--mer-border-color__error--hover);
    }

    &-active {
      --button-color: var(--mer-text__highlighted);
      --control__border-color: var(--mer-border-color__error--active);
    }
  }
}

%button-tertiary {
  @extend %button-base;
  @extend %body-regular-m;

  // Default styles for the tertiary button
  --button-background-color: transparent;
  --control__border-color: transparent;
  --button-color: var(--mer-text__primary);

  &--hover {
    --button-color: var(--mer-text__primary--hover);
  }

  &--active {
    --button-color: var(--mer-text__primary--active);
  }

  &--disabled {
    --button-color: var(--mer-text__on-disabled);
  }
}

%buttons-spacer {
  display: flex;
  gap: var(--mer-spacing--xs);
}

%button-loader {
  &::before {
    content: "";
    @include spinner(
      var(--loader-size),
      var(--loader-spinner-color),
      var(--loader-track-color)
    );
  }

  &-primary {
    --loader-spinner-color: var(--button-color--active);
    --loader-track-color: var(--button-color);

    &--active {
      --loader-spinner-color: var(--button-color--enabled);
    }
  }
  &-secondary {
    --loader-spinner-color: var(--mer-accent__primary--disabled);
    --loader-track-color: var(--button-color);

    &--hover {
      --loader-spinner-color: var(--mer-accent__primary);
    }
    &--active {
      --loader-spinner-color: var(--mer-accent__primary--disabled);
    }
  }
}
%button-with-loader {
  --loader-size: var(--mer-icon__box--md);
  @extend %icon-and-text;
}
%button-loader-only {
  --loader-size: 20px;
  --control__padding-block: calc(
    (var(--control__block-size) - var(--loader-size)) / 2
  );
}

/// @group Button
/// @param {String} $selector [".button-primary"] -
/// @param {String} $destructive-selector [".button-primary-destructive"] -
/// @param {String} $success-selector [".button-primary-success"] -
/// @param {Boolean} $add--disabled [true] -
/// @param {Boolean} $add--destructive [true] -
/// @param {Boolean} $add--success [true] -
/// @param {Boolean} $add--loading [true] -
@mixin button-primary(
  $selector: ".button-primary",
  $destructive-selector: ".button-primary-destructive",
  $success-selector: ".button-primary-success",
  $with-loader-selector: ".button-primary-with-loader",
  $loader-only-selector: ".button-primary-loader-only",
  $add--disabled: true,
  $add--destructive: true,
  $add--success: true,
  $add--loading: true
) {
  #{$selector} {
    @extend %button-primary;

    &:focus-visible {
      @extend %button-base--focus-visible;
    }

    &:hover {
      @extend %button-primary--hover;
    }

    &:active {
      @extend %button-primary--active;
    }

    @if $add--disabled {
      &:disabled {
        @extend %button-primary--disabled;
      }
    }
  }

  @if $add--destructive {
    #{$destructive-selector} {
      @extend %button-primary;
      @extend %button-primary--destructive;

      &:focus-visible {
        // TODO: avoid duplcation
        @extend %button-base--focus-visible;
      }

      &:hover {
        @extend %button-primary--destructive-hover;
      }

      &:active {
        @extend %button-primary--destructive-active;
      }

      @if $add--disabled {
        // TODO: avoid duplcation
        &:disabled {
          @extend %button-primary--disabled;
        }
      }
    }
  }

  @if $add--success {
    #{$success-selector} {
      @extend %button-primary;
      @extend %button-primary--success;

      &:focus-visible {
        // TODO: avoid duplcation
        @extend %button-base--focus-visible;
      }

      &:hover {
        @extend %button-primary--success-hover;
      }

      &:active {
        @extend %button-primary--success-active;
      }

      @if $add--disabled {
        // TODO: avoid duplcation
        &:disabled {
          @extend %button-primary--disabled;
        }
      }
    }
  }

  @if $add--loading {
    #{$with-loader-selector} {
      @extend %button-primary;
      @extend %button-loader;
      @extend %button-loader-primary;
      @extend %button-with-loader;

      &:focus-visible {
        @extend %button-base--focus-visible;
      }

      &:hover {
        @extend %button-primary--hover;
      }

      &:active {
        @extend %button-primary--active;
        @extend %button-loader-primary--active;
      }

      @if $add--disabled {
        &:disabled {
          @extend %button-primary--disabled;
        }
      }
    }

    #{$loader-only-selector} {
      @extend %button-primary;
      @extend %button-loader;
      @extend %button-loader-primary;
      @extend %button-loader-only;

      &:focus-visible {
        @extend %button-base--focus-visible;
      }

      &:hover {
        @extend %button-primary--hover;
      }

      &:active {
        @extend %button-primary--active;
        @extend %button-loader-primary--active;
      }

      @if $add--disabled {
        &:disabled {
          @extend %button-primary--disabled;
        }
      }
    }
  }
}

/// @group Button
/// @param {String} $selector [".button-secondary"] -
/// @param {Boolean} $add--loading [true] -
@mixin button-secondary(
  $selector: ".button-secondary",
  $destructive-selector: ".button-secondary-destructive",
  $with-loader-selector: ".button-secondary-with-loader",
  $loader-only-selector: ".button-secondary-loader-only",
  $add--disabled: true,
  $add--destructive: true,
  $add--loading: true
) {
  #{$selector} {
    @extend %button-secondary;

    &:focus-visible {
      @extend %button-base--focus-visible;
    }

    &:hover {
      @extend %button-secondary--hover;
    }

    &:active {
      @extend %button-secondary--active;
    }

    @if $add--disabled == true {
      &:disabled {
        @extend %button-secondary--disabled;
      }
    }
  }

  @if $add--destructive {
    #{$destructive-selector} {
      @extend %button-secondary;
      @extend %button-secondary--destructive;

      &:focus-visible {
        // TODO: avoid duplcation
        @extend %button-base--focus-visible;
      }

      &:hover {
        @extend %button-secondary--destructive-hover;
      }

      &:active {
        @extend %button-secondary--destructive-active;
      }

      @if $add--disabled {
        // TODO: avoid duplcation
        &:disabled {
          @extend %button-secondary--disabled;
        }
      }
    }
  }

  @if $add--loading {
    #{$with-loader-selector} {
      @extend %button-secondary;
      @extend %button-loader;
      @extend %button-loader-secondary;
      @extend %button-with-loader;

      &:focus-visible {
        @extend %button-base--focus-visible;
      }

      &:hover {
        @extend %button-secondary--hover;
        @extend %button-loader-secondary--hover;
      }

      &:active {
        @extend %button-secondary--active;
        @extend %button-loader-secondary--active;
      }

      @if $add--disabled {
        &:disabled {
          @extend %button-secondary--disabled;
        }
      }
    }

    #{$loader-only-selector} {
      @extend %button-secondary;
      @extend %button-loader;
      @extend %button-loader-secondary;
      @extend %button-loader-only;

      &:focus-visible {
        @extend %button-base--focus-visible;
      }

      &:hover {
        @extend %button-secondary--hover;
        @extend %button-loader-secondary--hover;
      }

      &:active {
        @extend %button-secondary--active;
        @extend %button-loader-secondary--active;
      }

      @if $add--disabled {
        &:disabled {
          @extend %button-secondary--disabled;
        }
      }
    }
  }
}

/// @group Button
/// @param {String} $selector [".button-tertiary"] -
@mixin button-tertiary($selector: ".button-tertiary", $add--disabled: true) {
  #{$selector} {
    @extend %button-tertiary;

    &:focus-visible {
      @extend %button-base--focus-visible;
    }

    &:hover {
      @extend %button-tertiary--hover;
    }

    &:active {
      @extend %button-tertiary--active;
    }

    @if $add--disabled == true {
      &:disabled,
      &--disabled {
        @extend %button-tertiary--disabled;
      }
    }
  }
}

/// @group Button
/// @param {String} $selector [".buttons-spacer"] -
@mixin buttons-spacer($selector: ".buttons-spacer") {
  #{$selector} {
    @extend %buttons-spacer;
  }
}

@mixin button-classes() {
  // Button primary
  @include button-primary();

  // Button secondary
  @include button-secondary();

  // Button tertiary
  @include button-tertiary();

  // Buttons spacer
  @include buttons-spacer();
}
